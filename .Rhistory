################################################################################
##### Writing the pomp objects to estimate the parameters using particle filtering
##
## LBV SEIR model with Frequency-dept transmission
## 25 years
## Seasonal birthing
## maternally-derived antibody
##
## Sensitivity analysis below
##
## clean up
rm(list=ls())
# instal r developer toolbox first (Rtools from Cran R)
## pomp test run lbv
getwd()
setwd("~/GitHub/LBV") # revise as necessary
library(pomp)
#Compiling C code and loading the dll
dyn.unload("lbvseirNoSeasFreqTwoParsMeasure.dll")
system("R CMD SHLIB lbvseirNoSeasFreqTwoParsMeasure.c")
dyn.load("lbvseirNoSeasFreqTwoParsMeasure.dll")
pomp(
data = data.frame(
time=seq(from=0,to=365*25,by=1),  # time for simulations to run
X = NA # dummy variables
),
times="time",
t0=0,
## native routine for the process simulator:
rprocess=euler.sim(
step.fun="sir_euler_simulator",
delta.t=1,
#PACKAGE="pomp"  ## may be include if does not work - this is where to look for the c file
## name of the shared-object library containing the PACKAGE="pomp",
),
## the order of the state variables assumed in the native routines:
statenames=c("SUSJ","MDAJ", "SUSJM","EIJ","ERJ","INFJ", "RECJ", "SUSA", "EIA","ERA","INFA", "RECA","SPA","SPJ"),
## the order of the parameters assumed in the native routines:
paramnames=c("BETA",
"RHO",
"ETA",
"SUSJ.0","MDAJ.0", "SUSJM.0","EIJ.0","ERJ.0","INFJ.0", "RECJ.0", "SUSA.0", "EIA.0","ERA.0","INFA.0", "RECA.0","SPA.0","SPJ.0"),
initializer=function(params,t0,statenames,...){
x0<-params[paste(statenames,".0",sep="")]
names(x0)<-statenames
return(x0)
}
) -> sir
params <- c(
BETA=18,
RHO=0.3,
ETA=0.1,
SUSJ.0=4000,MDAJ.0=4000, SUSJM.0=1000,EIJ.0=1000,ERJ.0=1000,INFJ.0=1000,
RECJ.0=10000,SUSA.0=50000, EIA.0=100,
ERA.0=1000,INFA.0=5000, RECA.0=50000,
SPA.0=0.4994506,SPJ.0=0.5882353)
sim <- simulate(sir,params=c(params),seed=3493885L,nsim=1,states=T,obs=F,as.data.frame=T) #
class(sir) # pomp object
class(sim) # data frame - change states, obs and data.frame if want pomp obj
plot(sim$time,sim$SUSJ,type="l")
points(sim$time,sim$RECJ,col="green",type="l")
points(sim$time,sim$MDA,col="brown",type="l")
points(sim$time,sim$INFJ,col="red",type="l")
plot(sim$time,sim$SUSA,type="l")
points(sim$time,sim$RECA,col="green",type="l")
points(sim$time,sim$INFA,col="red",type="l")
plot(sim$time,sim$SPA,type="l",col="green")
points(sim$time,sim$SPJ,type="l",col="red")
#########################################################
